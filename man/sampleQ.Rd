% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmg.R
\name{sampleQ}
\alias{sampleQ}
\title{is a wrapper function for the Hamiltonian Monte-Carlo sampler}
\usage{
sampleQ(Q, initial = NULL, n_replicates = 1000, mu = 0, sigma = 1,
  burn_in = 100, n_iter = 10000)
}
\arguments{
\item{Q}{list of matrices modeling the quadratic constraints of the
selection event}

\item{initial}{initialization sample. This sample must belong to the
acceptance region given by \code{Q}. In practice, this parameter is set
to the outcome of the original dataset.}

\item{n_replicates}{total number of replicates to be generated}

\item{mu}{mean of the outcome}

\item{sigma}{standard deviation of the outcome}

\item{burn_in}{number of burn-in iterations}

\item{n_iter}{maxmimum number of attempts for the sampling of an admissible 
point. Only used if initial is \code{NULL}.}
}
\value{
a matrix with \code{n_replicates} columns where each column
contains a sample within the acceptance region
}
\description{
In addition to our sampler \code{\link{sampleH}}, we include another sampler 
from the literature (see references) to sample replicates within the 
acceptance region. Similary to \code{\link{sampleH}}, \code{\link{sampleQ}}
covers second-order constraints and is based on Monte-Carlo chain iterative 
sampling.
}
\details{
In our simulatons, our
}
\examples{
n <- 30
p <- 20
K <- replicate(5, matrix(rnorm(n*p), nrow = n, ncol = p), simplify = FALSE)
K <-  sapply(K, function(X) return(X \%*\% t(X) / dim(X)[2]), simplify = FALSE)
Y <- rnorm(n) 
L <- Y \%*\% t(Y)  
selection <- FOHSIC(K, L, 2)
constraintQ <- forwardQ(K, select = selection)
samples <- sampleQ(Q = constraintQ, initial = Y,
                   n_replicates = 50, burn_in = 20)
}
\references{
Pakman, A., & Paninski, L. (2014). Exact Hamiltonian Monte Carlo
for truncated multivariate gaussians. Journal of Computational and Graphical 
Statistics, 23(2), 518â€“542.
}
\seealso{
\code{\link[tmg]{rtmg}}
}
