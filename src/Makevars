BACKEND = CPU

CXX_STD = CXX11

PKG_CPPFLAGS = -I. 
PKG_CXXFLAGS =  
PKG_LIBS = -Wl,-rpath

R_LIBS = -Wl,--export-dynamic -fopenmp -L/cbio/donnees/lslim/.linuxbrew/opt/gettext/lib -L/cbio/donnees/lslim/.linuxbrew/opt/readline/lib -L/cbio/donnees/lslim/.linuxbrew/lib -L/cbio/donnees/lslim/.linuxbrew/opt/gettext/lib -L/cbio/donnees/lslim/.linuxbrew/opt/readline/lib -L/cbio/donnees/lslim/.linuxbrew/lib -L/cbio/donnees/lslim/.linuxbrew/Cellar/r/4.0.0/lib/R/lib -lR -L/cbio/donnees/lslim/.linuxbrew/Cellar/pcre2/10.34/lib -lpcre2-8 -llzma -lbz2 -lz -lrt -ldl -lm -licuuc -licui18n

ifeq ($(BACKEND), CUDA)
cu_sources := $(wildcard *.cu)
cu_sharedlibs := $(patsubst %.cu, %.o, $(cu_sources))
endif

ifeq ($(BACKEND), CUDA)
cpp_sources := $(wildcard *.cpp)
cpp_sources := $(filter-out statC_cpu.cpp,$(cpp_sources))
cpp_sources := $(filter-out sampleC_cpu.cpp,$(cpp_sources))
else
cpp_sources := $(wildcard *.cpp)
endif
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

ifeq ($(BACKEND), CUDA)
OBJECTS = $(cpp_sharedlibs) $(cu_sharedlibs)
else
OBJECTS = $(cpp_sharedlibs)
endif

R_INC = -I/cbio/donnees/lslim/.linuxbrew/Cellar/r/4.0.0/lib/R/include -I/cbio/donnees/lslim/.linuxbrew/lib/R/4.0/site-library/Rcpp/include -I"/cbio/donnees/lslim/.linuxbrew/lib/R/4.0/site-library/RcppArmadillo/include"
CXX_ARGS = -fpic

CU_ARGS := -Xcompiler -fPIC -std=c++11
CU_ARGS += -Xcudafe --diag_suppress=code_is_unreachable
CU_ARGS += -Xcudafe --diag_suppress=initialization_not_reachable
CU_ARGS += -Xcudafe --diag_suppress=missing_initializer_on_const
CU_ARGS += -Xcudafe --diag_suppress=declared_but_not_referenced
CU_INCL = -I/cbio/donnees/lslim/.linuxbrew/Cellar/r/4.0.0/lib/R/include -I"/cbio/donnees/lslim/.linuxbrew/lib/R/4.0/site-library/RcppArmadillo/include" -I/cbio/donnees/lslim/.linuxbrew/lib/R/4.0/site-library/Rcpp/include 

CXX=g++

all: kernelPSI.so

kernelPSI.so: $(OBJECTS)

%.o: %.cpp $(cpp_sources)
	$(CXX) $(CXX_ARGS) $(R_INC) -c $< -o $@

CU_ARCH = 
NVCC =
ifeq ($(BACKEND), CUDA)
CU_ARCH = 
NVCC = 
%.o: %.cu $(cu_sources)
	$(NVCC) $(CU_ARCH) -DGPU -x cu -c $(CU_ARGS) $(CU_INCL) -c $< -o $@
endif


clean:
	@rm -rf *.o *.so *.dll
